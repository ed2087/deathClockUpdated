const cleanAndValidateUsername=e=>{const s=e.replace(/[\s\W]/g,"").replace(/[^a-zA-Z0-9]/g,"").slice(0,15);return id_("userName").value=s,s},fetchUsernameCheck=async e=>{try{const s=await fetch(`/user/userName?userName=${e}`),t=await s.json();handleResponse(t)}catch(e){handleError()}},handleResponse=e=>{!0!==e.status?enableRegisterButton(e.message):disableRegisterButton(e.message)},handleError=()=>{id_("userName").style.color="lightgreen",id_("message_alert").style.color="red",id_("message_alert").innerHTML="Error checking username"},enableRegisterButton=e=>{id_("message_alert").style.color="lightgreen",id_("message_alert").innerHTML=e,id_("register_button").disabled=!1},disableRegisterButton=e=>{id_("message_alert").style.color="red",id_("message_alert").innerHTML=e,id_("userName").style.color="red",id_("register_button").disabled=!0};let timeout;query_(".message").display="none",id_("userName").addEventListener("input",(e=>{const s=e.target.value;cleanAndValidateUsername(s),clearTimeout(timeout),timeout=setTimeout((()=>{fetchUsernameCheck(s)}),1e3)}));
